/*
 * Created: 2014-10-22
 * 
 * ====================================================================
 *    The author of this file licenses it to you under the Apache
 *    License, Version 2.0. You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing,
 *    software distributed under the License is distributed on an
 *    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *    KIND, either express or implied.  See the License for the
 *    specific language governing permissions and limitations
 *    under the License.
 * ====================================================================
 */
package at.co.malli.lib.gui;

import java.util.concurrent.atomic.AtomicBoolean;


/**
 * @author Dietmar Malli
 */
public class ProgressDialog extends javax.swing.JDialog
{
  private AtomicBoolean pressedCancel;

  /**
   * Creates a progress dialog, which implements the dialog interface.
   */
  public ProgressDialog (java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    setLocationRelativeTo(null);
    pressedCancel = new AtomicBoolean(false);
  }
  
  /**
   * @param value The minimum value which should be displayed.
   */
  public void setMinimum (int value)
  {
    jProg.setMinimum(value);
  }
  
  /**
   * @param value The maximum value which should be displayed.
   */
  public void setMaximum (int value)
  {
    jProg.setMaximum(value);
  }
  
  /**
   * @param value The value which should be displayed.
   */
  public void setValue (int value)
  {
    jProg.setValue(value);
  }
  
  /**
   * @param text The text which describes what is being done in the background.
   */
  public void setText (String text)
  {
    jLabText.setText(text);
  }

  /**
   * @return True if the user pressed cancel during the last time the Dialog was visible.
   */
  public boolean isPressedCancel ()
  {
    return pressedCancel.get();
  }
  
  @Override
  public void setVisible (boolean b)
  {
    if(b==true)
      pressedCancel.set(false); //Reset only when opening, not when closing...
    super.setVisible(b);
  }


  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jPanCenter = new javax.swing.JPanel();
    jProg = new javax.swing.JProgressBar();
    jButCancel = new javax.swing.JButton();
    jLabText = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Progress");
    setAlwaysOnTop(true);

    jPanCenter.setLayout(new java.awt.GridLayout(1, 0));
    jPanCenter.add(jProg);

    getContentPane().add(jPanCenter, java.awt.BorderLayout.CENTER);

    jButCancel.setText("Cancel");
    jButCancel.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButCancelActionPerformed(evt);
      }
    });
    getContentPane().add(jButCancel, java.awt.BorderLayout.SOUTH);

    jLabText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabText.setText("Loading File");
    getContentPane().add(jLabText, java.awt.BorderLayout.PAGE_START);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButCancelActionPerformed
  {//GEN-HEADEREND:event_jButCancelActionPerformed
    pressedCancel.set(true);
    dispose();
  }//GEN-LAST:event_jButCancelActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main (String args[])
  {
    /*
     * Set the Nimbus look and feel
     */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(ProgressDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(ProgressDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(ProgressDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(ProgressDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>

    /*
     * Create and display the dialog
     */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run ()
      {
        ProgressDialog dialog = new ProgressDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter()
        {
          @Override
          public void windowClosing (java.awt.event.WindowEvent e)
          {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButCancel;
  private javax.swing.JLabel jLabText;
  private javax.swing.JPanel jPanCenter;
  private javax.swing.JProgressBar jProg;
  // End of variables declaration//GEN-END:variables

}
